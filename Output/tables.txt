Analysis of sample1.c

1-  #include <stdio.h> 
2-  
3-  /// Standard commenter 
4-  
5-  /* 
6-  
7-  
8-   long commenter 
9-  
10-  
11-  */ 
12-  
13-  // Variable declaration 
14-  
15-  int i; 
16-  int j= 10; 
17-  volatile long double a ; 
18-  const unsigned char c ; 
19-  char *cp=NULL; 
20-  
21-  int main(){ 
22-  	printf("Working\n"); 
23-  }

TABLES:

Functions:
    Line	|	                Name	|	                    Parameters	|	                 Return	|	                 Usages	|	                  Scope
	____________________________________________________________________________________________________________________________________________________________________________
      21	|	                main	|	                              	|	                    int	|	                       	|	                 global

Variables:
	    Line	|	           Name	|	                   Type	|	                        Usages	|	                  Scope	
	__________________________________________________________________________________________________________________
	      15	|	              i	|	                    int	|	                              	|	                 global	
	      16	|	              j	|	                    int	|	                              	|	                 global	
	      17	|	              a	|	   volatile long double	|	                              	|	                 global	
	      18	|	              c	|	    const unsigned char	|	                              	|	                 global	
	      19	|	             cp	|	                 char *	|	                              	|	                 global	


_____________________________________________________________________________________________________


Analysis of sample2.c

1-  #include <stdio.h> 
2-  
3-  
4-  int i; 
5-  int j= 10; 
6-  volatile long double a ; 
7-  const unsigned char c= '=' ; 
8-  char *cp=NULL; 
9-  
10-  
11-  
12-  int main(){ 
13-  	int k ;
14-  
15-  	printf("Working\n"); 
16-  }
17-  

TABLES:

Functions:
    Line	|	                Name	|	                    Parameters	|	                 Return	|	                 Usages	|	                  Scope
	____________________________________________________________________________________________________________________________________________________________________________
      12	|	                main	|	                              	|	                    int	|	                       	|	                 global

Variables:
	    Line	|	           Name	|	                   Type	|	                        Usages	|	                  Scope	
	__________________________________________________________________________________________________________________
	       4	|	              i	|	                    int	|	                              	|	                 global	
	       5	|	              j	|	                    int	|	                              	|	                 global	
	       6	|	              a	|	   volatile long double	|	                              	|	                 global	
	       7	|	              c	|	    const unsigned char	|	                              	|	                 global	
	       8	|	             cp	|	                 char *	|	                              	|	                 global	
	      13	|	              k	|	                    int	|	                              	|	                main 12	


_____________________________________________________________________________________________________


Analysis of sample3.c

1-  #include <stdio.h>
2-  
3-  int dogs;
4-  int cats;
5-  
6-  int func(int people, int pets){
7-  
8-  	return people+pets;
9-  }
10-  
11-  
12-  int main(int argc, char **argv){
13-  	dogs = 0;
14-  	printf("\nFIN\n");
15-  }

TABLES:

Functions:
    Line	|	                Name	|	                    Parameters	|	                 Return	|	                 Usages	|	                  Scope
	____________________________________________________________________________________________________________________________________________________________________________
       6	|	                func	|	                people  pets  	|	                    int	|	                       	|	                 global
      12	|	                main	|	                  argc  argv  	|	                    int	|	                       	|	                 global

Variables:
	    Line	|	           Name	|	                   Type	|	                        Usages	|	                  Scope	
	__________________________________________________________________________________________________________________
	       3	|	           dogs	|	                    int	|	                           13 	|	                 global	
	       4	|	           cats	|	                    int	|	                              	|	                 global	
	       6	|	         people	|	                    int	|	                            8 	|	           func 6 param	
	       6	|	           pets	|	                    int	|	                            8 	|	           func 6 param	
	      12	|	           argc	|	                    int	|	                              	|	          main 12 param	
	      12	|	           argv	|	                char **	|	                              	|	          main 12 param	


_____________________________________________________________________________________________________


Analysis of sample4.c

1-  #include <stdio.h>
2-  
3-  
4-  
5-  double globalRate(int warsawpop){
6-  	double globalpop =7000000000000;
7-  	return warsawpop/globalpop*100;
8-  }
9-  
10-  int main(int argc, char **argv){
11-  
12-  
13-  
14-  	printf("\nFIN\n");
15-  }

TABLES:

Functions:
    Line	|	                Name	|	                    Parameters	|	                 Return	|	                 Usages	|	                  Scope
	____________________________________________________________________________________________________________________________________________________________________________
       5	|	          globalRate	|	                   warsawpop  	|	                 double	|	                       	|	                 global
      10	|	                main	|	                  argc  argv  	|	                    int	|	                       	|	                 global

Variables:
	    Line	|	           Name	|	                   Type	|	                        Usages	|	                  Scope	
	__________________________________________________________________________________________________________________
	       5	|	      warsawpop	|	                    int	|	                            7 	|	     globalRate 5 param	
	       6	|	      globalpop	|	                 double	|	                            7 	|	           globalRate 5	
	      10	|	           argc	|	                    int	|	                              	|	          main 10 param	
	      10	|	           argv	|	                char **	|	                              	|	          main 10 param	


_____________________________________________________________________________________________________


Analysis of sample5.c

1-  #include <stdio.h>
2-  
3-  
4-  
5-  double globalRate(int warsawpop){
6-  
7-  
8-  	int getGlobalPop(){
9-  		
10-  
11-  		int sillyFunction(int m){
12-  			return 2;
13-  		}
14-  
15-  
16-  		double globalpop =7000000000000;
17-  		return globalpop;
18-  	}
19-  
20-  
21-  	int a = getGlobalPop();
22-  	return warsawpop/a*100;
23-  }
24-  
25-  int main(int argc, char **argv){
26-  
27-  	printf("\nFIN\n");
28-  }

TABLES:

Functions:
    Line	|	                Name	|	                    Parameters	|	                 Return	|	                 Usages	|	                  Scope
	____________________________________________________________________________________________________________________________________________________________________________
       5	|	          globalRate	|	                   warsawpop  	|	                 double	|	                       	|	                 global
       8	|	        getGlobalPop	|	                              	|	                    int	|	                    21 	|	           globalRate 5
      11	|	       sillyFunction	|	                           m  	|	                    int	|	                       	|	         getGlobalPop 8
      25	|	                main	|	                  argc  argv  	|	                    int	|	                       	|	                 global

Variables:
	    Line	|	           Name	|	                   Type	|	                        Usages	|	                  Scope	
	__________________________________________________________________________________________________________________
	       5	|	      warsawpop	|	                    int	|	                           22 	|	     globalRate 5 param	
	      11	|	              m	|	                    int	|	                              	|	 sillyFunction 11 param	
	      16	|	      globalpop	|	                 double	|	                           17 	|	         getGlobalPop 8	
	      21	|	              a	|	                    int	|	                           22 	|	           globalRate 5	
	      25	|	           argc	|	                    int	|	                              	|	          main 25 param	
	      25	|	           argv	|	                char **	|	                              	|	          main 25 param	


_____________________________________________________________________________________________________


Analysis of sample6.c

1-  
2-  
3-  int main(){
4-  	int i=0;
5-  
6-  	if( i==0){
7-  		int a = 0;
8-  	}
9-  	
10-  	else if( i<0{
11-  		int b = 0 ;
12-  	}
13-  	else{
14-  		int x=1;
15-  	}
16-  
17-  
18-  	while(i<10){
19-  		int c = 0;
20-  		i++;
21-  
22-  	do{
23-  		int f=0;
24-  		i++;
25-  	}while(i<10);
26-  	
27-  	i=0;
28-  
29-  	for(i=0;i<10;i++){
30-  		int d = 0;
31-  	}
32-  	i=0;
33-  
34-  
35-  
36-  	
37-  }

TABLES:

Functions:
    Line	|	                Name	|	                    Parameters	|	                 Return	|	                 Usages	|	                  Scope
	____________________________________________________________________________________________________________________________________________________________________________
       3	|	                main	|	                              	|	                    int	|	                       	|	                 global

Variables:
	    Line	|	           Name	|	                   Type	|	                        Usages	|	                  Scope	
	__________________________________________________________________________________________________________________
	       4	|	              i	|	                    int	|	                        10 18 	|	                 main 3	
	       7	|	              a	|	                    int	|	                              	|	              if line 6	
	      11	|	              b	|	                    int	|	                              	|	        else if line 10	
	      14	|	              x	|	                    int	|	                              	|	           else line 13	
	      19	|	              c	|	                    int	|	                              	|	          while line 18	
	      23	|	              f	|	                    int	|	                              	|	             do line 22	
	      30	|	              d	|	                    int	|	                              	|	            for line 29	


_____________________________________________________________________________________________________


Analysis of sample7.c

1-  
2-  int try(int a, int b){
3-  
4-  	printf("We try to cheat the program using variables    a;   b;      try(); ");
5-  
6-  	return a;
7-  }
8-  
9-  int main(){
10-  	try();
11-  
12-  	
13-  }
14-  

TABLES:

Functions:
    Line	|	                Name	|	                    Parameters	|	                 Return	|	                 Usages	|	                  Scope
	____________________________________________________________________________________________________________________________________________________________________________
       2	|	                 try	|	                        a  b  	|	                    int	|	                    10 	|	                 global
       9	|	                main	|	                              	|	                    int	|	                       	|	                 global

Variables:
	    Line	|	           Name	|	                   Type	|	                        Usages	|	                  Scope	
	__________________________________________________________________________________________________________________
	       2	|	              a	|	                    int	|	                            6 	|	            try 2 param	
	       2	|	              b	|	                    int	|	                              	|	            try 2 param	


_____________________________________________________________________________________________________


Analysis of sample8.c

1-  
2-  #include <stdio.h> 
3-  #include <math.h> 
4-  
5-  int STUDENT = 10; 
6-  
7-  int asssingSchool(int student){ 
8-  	int generateRand(int n){ 
9-  		return n*rand(); 
10-  	} 
11-  
12-  	int school = generateRand(student)*100; 
13-  
14-  	return school; 
15-  } 
16-  
17-  int assingClass( int student, int school){ 
18-  	int generateRand(int n){ 
19-  		return n*rand(); 
20-  	} 
21-  
22-  	int class = generateRand(student*school)*200; 
23-  	return class; 
24-  } 
25-  
26-  int main(int argn, char ** argc){ 
27-  	int student = 10; 
28-  	int school = asssingSchool(student); 
29-  	int class = assingClass(student, school); 
30-   /*asdfasdfsad   */ 
31-  	printf("The student %d will go to school %d and class %d \n", student , school , class ); 
32-  
33-  }

TABLES:

Functions:
    Line	|	                Name	|	                    Parameters	|	                 Return	|	                 Usages	|	                  Scope
	____________________________________________________________________________________________________________________________________________________________________________
       7	|	       asssingSchool	|	                     student  	|	                    int	|	                    28 	|	                 global
       8	|	        generateRand	|	                           n  	|	                    int	|	                    12 	|	        asssingSchool 7
      17	|	         assingClass	|	             student  school  	|	                    int	|	                    29 	|	                 global
      18	|	        generateRand	|	                           n  	|	                    int	|	                    22 	|	         assingClass 17
      26	|	                main	|	                  argn  argc  	|	                    int	|	                       	|	                 global

Variables:
	    Line	|	           Name	|	                   Type	|	                        Usages	|	                  Scope	
	__________________________________________________________________________________________________________________
	       5	|	        STUDENT	|	                    int	|	                              	|	                 global	
	       7	|	        student	|	                    int	|	                           12 	|	  asssingSchool 7 param	
	       8	|	              n	|	                    int	|	                            9 	|	   generateRand 8 param	
	      12	|	         school	|	                    int	|	                           14 	|	        asssingSchool 7	
	      17	|	        student	|	                    int	|	                           22 	|	   assingClass 17 param	
	      17	|	         school	|	                    int	|	                           22 	|	   assingClass 17 param	
	      18	|	              n	|	                    int	|	                           19 	|	  generateRand 18 param	
	      22	|	          class	|	                    int	|	                           23 	|	         assingClass 17	
	      26	|	           argn	|	                    int	|	                              	|	          main 26 param	
	      26	|	           argc	|	                char **	|	                              	|	          main 26 param	
	      27	|	        student	|	                    int	|	                     28 29 31 	|	                main 26	
	      28	|	         school	|	                    int	|	                        29 31 	|	                main 26	
	      29	|	          class	|	                    int	|	                           31 	|	                main 26	


_____________________________________________________________________________________________________


Analysis of sample9.c

1-  
2-  
3-  
4-  #include <stdio.h>
5-  
6-  
7-  
8-  // Test C parser with a real set of code
9-  
10-  /*
11-  
12-  The set of code should fulfill all the condition establish in the project 
13-  
14-  */
15-  int MAX=10;
16-  
17-  /* Fibonacci Series c language */
18-  int nextfibonacciNumber(int *first, int *second){
19-  	int next;
20-  
21-  	next = *first + *second ; 
22-  	*first = *second;
23-  	return next;
24-  
25-  }
26-  
27-  
28-  int fibonacciCalc(int N, int f, int s)
29-  {
30-     int *first;
31-     int *second;
32-     int c;
33-   
34-   	first = &f;
35-   	second= &s;
36-     printf("First %d terms of Fibonacci series are :-\n", N);
37-   	
38-     for ( c=0  ; c < N && c < MAX ; c++ )
39-     {
40-        if ( c < 1 )
41-            printf("%d\n",*first);
42-        else if ( c == 1){
43-            printf("%d\n",*second);
44-        }
45-        else
46-        {
47-        	*second = nextfibonacciNumber(first, second);
48-        	printf("%d\n",*second);
49-        }
50-        
51-     }
52-   
53-     return 0;
54-  }
55-  
56-  int main(){
57-  	fibonacciCalc(8,1,2);
58-  }
59-  

TABLES:

Functions:
    Line	|	                Name	|	                    Parameters	|	                 Return	|	                 Usages	|	                  Scope
	____________________________________________________________________________________________________________________________________________________________________________
      18	|	 nextfibonacciNumber	|	               first  second  	|	                    int	|	                    47 	|	                 global
      28	|	       fibonacciCalc	|	                     N  f  s  	|	                    int	|	                    57 	|	                 global
      56	|	                main	|	                              	|	                    int	|	                       	|	                 global

Variables:
	    Line	|	           Name	|	                   Type	|	                        Usages	|	                  Scope	
	__________________________________________________________________________________________________________________
	      15	|	            MAX	|	                    int	|	                           38 	|	                 global	
	      18	|	          first	|	                  int *	|	                        21 22 	|	nextfibonacciNumber 18 param	
	      18	|	         second	|	                  int *	|	                        21 22 	|	nextfibonacciNumber 18 param	
	      19	|	           next	|	                    int	|	                           23 	|	 nextfibonacciNumber 18	
	      28	|	              N	|	                    int	|	                        36 38 	|	 fibonacciCalc 28 param	
	      28	|	              f	|	                    int	|	                           34 	|	 fibonacciCalc 28 param	
	      28	|	              s	|	                    int	|	                           35 	|	 fibonacciCalc 28 param	
	      30	|	          first	|	                  int *	|	                     34 41 47 	|	       fibonacciCalc 28	
	      31	|	         second	|	                  int *	|	               35 43 47 47 48 	|	       fibonacciCalc 28	
	      32	|	              c	|	                    int	|	            38 38 38 38 40 42 	|	       fibonacciCalc 28	


_____________________________________________________________________________________________________


